// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using CodeBeautify;
//
//    var welcome7 = Welcome7.FromJson(jsonString);

namespace CodeBeautify
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Welcome7
    {
        [JsonProperty("$schema")]
        public Uri Schema { get; set; }

        [JsonProperty("$id")]
        public Uri Id { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("required")]
        public string[] Welcome7Required { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public Welcome7Properties Properties { get; set; }

        [JsonProperty("definitions")]
        public Definitions Definitions { get; set; }
    }

    public partial class Definitions
    {
        [JsonProperty("refType")]
        public Range RefType { get; set; }

        [JsonProperty("refLinkType")]
        public RefLinkType RefLinkType { get; set; }

        [JsonProperty("bomLinkDocumentType")]
        public BomLinkMentType BomLinkDocumentType { get; set; }

        [JsonProperty("bomLinkElementType")]
        public BomLinkMentType BomLinkElementType { get; set; }

        [JsonProperty("bomLink")]
        public BomLink BomLink { get; set; }

        [JsonProperty("metadata")]
        public Metadata Metadata { get; set; }

        [JsonProperty("tool")]
        public Tool Tool { get; set; }

        [JsonProperty("organizationalEntity")]
        public OrganizationalEntity OrganizationalEntity { get; set; }

        [JsonProperty("organizationalContact")]
        public OrganizationalContact OrganizationalContact { get; set; }

        [JsonProperty("component")]
        public Component Component { get; set; }

        [JsonProperty("swid")]
        public Swid Swid { get; set; }

        [JsonProperty("attachment")]
        public Attachment Attachment { get; set; }

        [JsonProperty("hash")]
        public Hash Hash { get; set; }

        [JsonProperty("hash-alg")]
        public Cwe HashAlg { get; set; }

        [JsonProperty("hash-content")]
        public HashContent HashContent { get; set; }

        [JsonProperty("license")]
        public License License { get; set; }

        [JsonProperty("licenseChoice")]
        public LicenseChoice LicenseChoice { get; set; }

        [JsonProperty("commit")]
        public Commit Commit { get; set; }

        [JsonProperty("patch")]
        public Patch Patch { get; set; }

        [JsonProperty("diff")]
        public Diff Diff { get; set; }

        [JsonProperty("issue")]
        public Issue Issue { get; set; }

        [JsonProperty("identifiableAction")]
        public IdentifiableAction IdentifiableAction { get; set; }

        [JsonProperty("externalReference")]
        public ExternalReference ExternalReference { get; set; }

        [JsonProperty("dependency")]
        public Dependency Dependency { get; set; }

        [JsonProperty("service")]
        public Service Service { get; set; }

        [JsonProperty("serviceData")]
        public ServiceData ServiceData { get; set; }

        [JsonProperty("dataFlowDirection")]
        public Cwe DataFlowDirection { get; set; }

        [JsonProperty("copyright")]
        public Copyright Copyright { get; set; }

        [JsonProperty("componentEvidence")]
        public ComponentEvidence ComponentEvidence { get; set; }

        [JsonProperty("compositions")]
        public Compositions Compositions { get; set; }

        [JsonProperty("aggregateType")]
        public AggregateType AggregateType { get; set; }

        [JsonProperty("property")]
        public HashContent Property { get; set; }

        [JsonProperty("localeType")]
        public HashContent LocaleType { get; set; }

        [JsonProperty("releaseType")]
        public Cwe ReleaseType { get; set; }

        [JsonProperty("note")]
        public Note Note { get; set; }

        [JsonProperty("releaseNotes")]
        public ReleaseNotes ReleaseNotes { get; set; }

        [JsonProperty("advisory")]
        public Advisory Advisory { get; set; }

        [JsonProperty("cwe")]
        public Cwe Cwe { get; set; }

        [JsonProperty("severity")]
        public HashContent Severity { get; set; }

        [JsonProperty("scoreMethod")]
        public ScoreMethod ScoreMethod { get; set; }

        [JsonProperty("impactAnalysisState")]
        public Cwe ImpactAnalysisState { get; set; }

        [JsonProperty("impactAnalysisJustification")]
        public Cwe ImpactAnalysisJustification { get; set; }

        [JsonProperty("rating")]
        public Rating Rating { get; set; }

        [JsonProperty("vulnerabilitySource")]
        public VulnerabilitySource VulnerabilitySource { get; set; }

        [JsonProperty("vulnerability")]
        public Vulnerability Vulnerability { get; set; }

        [JsonProperty("affectedStatus")]
        public AffectedStatus AffectedStatus { get; set; }

        [JsonProperty("version")]
        public Range Version { get; set; }

        [JsonProperty("range")]
        public Range Range { get; set; }

        [JsonProperty("annotations")]
        public Annotations Annotations { get; set; }

        [JsonProperty("modelCard")]
        public ModelCard ModelCard { get; set; }

        [JsonProperty("inputOutputMLParameters")]
        public InputOutputMlParameters InputOutputMlParameters { get; set; }

        [JsonProperty("componentData")]
        public ComponentData ComponentData { get; set; }

        [JsonProperty("dataGovernance")]
        public DataGovernance DataGovernance { get; set; }

        [JsonProperty("dataGovernanceResponsibleParty")]
        public DataGovernanceResponsibleParty DataGovernanceResponsibleParty { get; set; }

        [JsonProperty("graphicsCollection")]
        public GraphicsCollection GraphicsCollection { get; set; }

        [JsonProperty("graphic")]
        public Graphic Graphic { get; set; }

        [JsonProperty("performanceMetric")]
        public PerformanceMetric PerformanceMetric { get; set; }

        [JsonProperty("risk")]
        public Risk Risk { get; set; }

        [JsonProperty("fairnessAssessment")]
        public FairnessAssessment FairnessAssessment { get; set; }

        [JsonProperty("dataClassification")]
        public Cwe DataClassification { get; set; }

        [JsonProperty("formula")]
        public Formula Formula { get; set; }

        [JsonProperty("workflow")]
        public Task Workflow { get; set; }

        [JsonProperty("task")]
        public Task Task { get; set; }

        [JsonProperty("step")]
        public Step Step { get; set; }

        [JsonProperty("command")]
        public Command Command { get; set; }

        [JsonProperty("workspace")]
        public Workspace Workspace { get; set; }

        [JsonProperty("volume")]
        public Volume Volume { get; set; }

        [JsonProperty("trigger")]
        public Trigger Trigger { get; set; }

        [JsonProperty("event")]
        public Event Event { get; set; }

        [JsonProperty("inputType")]
        public InputType InputType { get; set; }

        [JsonProperty("outputType")]
        public OutputType OutputType { get; set; }

        [JsonProperty("resourceReferenceChoice")]
        public ResourceReferenceChoice ResourceReferenceChoice { get; set; }

        [JsonProperty("condition")]
        public Condition Condition { get; set; }

        [JsonProperty("taskType")]
        public TaskType TaskType { get; set; }

        [JsonProperty("parameter")]
        public Parameter Parameter { get; set; }

        [JsonProperty("signature")]
        public LicenseChoice Signature { get; set; }
    }

    public partial class Advisory
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] AdvisoryRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AdvisoryProperties Properties { get; set; }
    }

    public partial class AdvisoryProperties
    {
        [JsonProperty("title")]
        public Title Title { get; set; }

        [JsonProperty("url")]
        public Title Url { get; set; }
    }

    public partial class HashContentProperties
    {
        [JsonProperty("name")]
        public Title Name { get; set; }

        [JsonProperty("value")]
        public Title Value { get; set; }
    }

    public partial class HashContentItems
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyProperties Properties { get; set; }

        [JsonProperty("anyOf", NullValueHandling = NullValueHandling.Ignore)]
        public HashContent[] AnyOf { get; set; }

        [JsonProperty("oneOf", NullValueHandling = NullValueHandling.Ignore)]
        public AnnotatorOneOf[] OneOf { get; set; }
    }

    public partial class HashContent
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public HashContentItems Items { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }

        [JsonProperty("pattern", NullValueHandling = NullValueHandling.Ignore)]
        public string Pattern { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public HashContentProperties Properties { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }
    }

    public partial class PurpleProperties
    {
        [JsonProperty("technique")]
        public HashContent Technique { get; set; }

        [JsonProperty("confidence")]
        public Cwe Confidence { get; set; }

        [JsonProperty("value")]
        public HashContent Value { get; set; }
    }

    public partial class ContentItems
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleProperties Properties { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }
    }

    public partial class Title
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string TitleTitle { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("default", NullValueHandling = NullValueHandling.Ignore)]
        public Default? Default { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public ContentItems Items { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }
    }

    public partial class AnnotatorOneOf
    {
        [JsonProperty("required")]
        public string[] OneOfRequired { get; set; }
    }

    public partial class FluffyProperties
    {
        [JsonProperty("bom-ref", NullValueHandling = NullValueHandling.Ignore)]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("location", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreMethod Location { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public Severity Version { get; set; }

        [JsonProperty("range", NullValueHandling = NullValueHandling.Ignore)]
        public Severity Range { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public Status Status { get; set; }
    }

    public partial class LicenseChoice
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public LicenseChoiceItems Items { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("oneOf", NullValueHandling = NullValueHandling.Ignore)]
        public LicenseChoiceOneOf[] OneOf { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }

        [JsonProperty("$comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }
    }

    public partial class LicenseChoiceItems
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("oneOf", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleOneOf[] OneOf { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }
    }

    public partial class PurpleOneOf
    {
        [JsonProperty("required")]
        public string[] OneOfRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public TentacledProperties Properties { get; set; }
    }

    public partial class TentacledProperties
    {
        [JsonProperty("phase", NullValueHandling = NullValueHandling.Ignore)]
        public Cwe Phase { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public Cwe Name { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public Cwe Description { get; set; }
    }

    public partial class Cwe
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("minimum", NullValueHandling = NullValueHandling.Ignore)]
        public long? Minimum { get; set; }

        [JsonProperty("maximum", NullValueHandling = NullValueHandling.Ignore)]
        public long? Maximum { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public CweItems Items { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }

        [JsonProperty("$comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }
    }

    public partial class CweItems
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }
    }

    public partial class LicenseChoiceOneOf
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public ItemsUnion? Items { get; set; }

        [JsonProperty("additionalItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalItems { get; set; }

        [JsonProperty("minItems", NullValueHandling = NullValueHandling.Ignore)]
        public long? MinItems { get; set; }

        [JsonProperty("maxItems", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxItems { get; set; }

        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public string[] OneOfRequired { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public TentacledProperties Properties { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("required")]
        public string[] ItemRequired { get; set; }

        [JsonProperty("properties")]
        public ItemProperties Properties { get; set; }
    }

    public partial class ItemProperties
    {
        [JsonProperty("expression")]
        public ScoreMethod Expression { get; set; }

        [JsonProperty("bom-ref")]
        public ScoreMethod BomRef { get; set; }
    }

    public partial class ScoreMethod
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public OneOfElement Items { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("default", NullValueHandling = NullValueHandling.Ignore)]
        public string Default { get; set; }
    }

    public partial class OneOfElement
    {
        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }
    }

    public partial class PurpleItems
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("required")]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public StickyProperties Properties { get; set; }
    }

    public partial class StickyProperties
    {
        [JsonProperty("license")]
        public ClassificationElement License { get; set; }
    }

    public partial class ClassificationElement
    {
        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    public partial class Severity
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    public partial class Status
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }

        [JsonProperty("default")]
        public string Default { get; set; }
    }

    public partial class AffectedStatus
    {
        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public ClassificationElement Items { get; set; }

        [JsonProperty("uniqueItems", NullValueHandling = NullValueHandling.Ignore)]
        public bool? UniqueItems { get; set; }

        [JsonProperty("$comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }
    }

    public partial class AggregateType
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("default")]
        public string Default { get; set; }

        [JsonProperty("enum")]
        public string[] Enum { get; set; }
    }

    public partial class Annotations
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] AnnotationsRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public IndigoProperties Properties { get; set; }
    }

    public partial class IndigoProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("subjects")]
        public Subjects Subjects { get; set; }

        [JsonProperty("annotator")]
        public Annotator Annotator { get; set; }

        [JsonProperty("timestamp")]
        public Title Timestamp { get; set; }

        [JsonProperty("text")]
        public Title Text { get; set; }

        [JsonProperty("signature")]
        public LicenseChoice Signature { get; set; }
    }

    public partial class Annotator
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AnnotatorProperties Properties { get; set; }
    }

    public partial class AnnotatorProperties
    {
        [JsonProperty("organization")]
        public Severity Organization { get; set; }

        [JsonProperty("individual")]
        public Severity Individual { get; set; }

        [JsonProperty("component")]
        public Severity Component { get; set; }

        [JsonProperty("service")]
        public Severity Service { get; set; }
    }

    public partial class Subjects
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }

        [JsonProperty("items")]
        public BomLink Items { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class BomLink
    {
        [JsonProperty("anyOf")]
        public AnyOf[] AnyOf { get; set; }
    }

    public partial class AnyOf
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    public partial class Attachment
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] AttachmentRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AttachmentProperties Properties { get; set; }
    }

    public partial class AttachmentProperties
    {
        [JsonProperty("contentType")]
        public Title ContentType { get; set; }

        [JsonProperty("encoding")]
        public Title Encoding { get; set; }

        [JsonProperty("content")]
        public Title Content { get; set; }
    }

    public partial class BomLinkMentType
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("format")]
        public string Format { get; set; }

        [JsonProperty("pattern")]
        public string Pattern { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }
    }

    public partial class Command
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CommandProperties Properties { get; set; }
    }

    public partial class CommandProperties
    {
        [JsonProperty("executed")]
        public Title Executed { get; set; }

        [JsonProperty("properties")]
        public HashContent Properties { get; set; }
    }

    public partial class Commit
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CommitProperties Properties { get; set; }
    }

    public partial class CommitProperties
    {
        [JsonProperty("uid")]
        public Title Uid { get; set; }

        [JsonProperty("url")]
        public Title Url { get; set; }

        [JsonProperty("author")]
        public LicenseChoice Author { get; set; }

        [JsonProperty("committer")]
        public LicenseChoice Committer { get; set; }

        [JsonProperty("message")]
        public Title Message { get; set; }
    }

    public partial class Component
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] ComponentRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ComponentProperties Properties { get; set; }
    }

    public partial class ComponentProperties
    {
        [JsonProperty("type")]
        public ScoreMethod Type { get; set; }

        [JsonProperty("mime-type")]
        public HashContent MimeType { get; set; }

        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("supplier")]
        public LicenseChoice Supplier { get; set; }

        [JsonProperty("author")]
        public Title Author { get; set; }

        [JsonProperty("publisher")]
        public ScoreMethod Publisher { get; set; }

        [JsonProperty("group")]
        public HashContent Group { get; set; }

        [JsonProperty("name")]
        public HashContent Name { get; set; }

        [JsonProperty("version")]
        public ScoreMethod Version { get; set; }

        [JsonProperty("description")]
        public Title Description { get; set; }

        [JsonProperty("scope")]
        public Title Scope { get; set; }

        [JsonProperty("hashes")]
        public HashContent Hashes { get; set; }

        [JsonProperty("licenses")]
        public AnyOf Licenses { get; set; }

        [JsonProperty("copyright")]
        public Title Copyright { get; set; }

        [JsonProperty("cpe")]
        public Title Cpe { get; set; }

        [JsonProperty("purl")]
        public ScoreMethod Purl { get; set; }

        [JsonProperty("swid")]
        public LicenseChoice Swid { get; set; }

        [JsonProperty("modified")]
        public HashContent Modified { get; set; }

        [JsonProperty("pedigree")]
        public Pedigree Pedigree { get; set; }

        [JsonProperty("externalReferences")]
        public HashContent ExternalReferences { get; set; }

        [JsonProperty("components")]
        public ScoreMethod Components { get; set; }

        [JsonProperty("evidence")]
        public LicenseChoice Evidence { get; set; }

        [JsonProperty("releaseNotes")]
        public LicenseChoice ReleaseNotes { get; set; }

        [JsonProperty("modelCard")]
        public AnyOf ModelCard { get; set; }

        [JsonProperty("data")]
        public Title Data { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }

        [JsonProperty("signature")]
        public LicenseChoice Signature { get; set; }
    }

    public partial class Pedigree
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public PedigreeProperties Properties { get; set; }
    }

    public partial class PedigreeProperties
    {
        [JsonProperty("ancestors")]
        public ScoreMethod Ancestors { get; set; }

        [JsonProperty("descendants")]
        public ScoreMethod Descendants { get; set; }

        [JsonProperty("variants")]
        public ScoreMethod Variants { get; set; }

        [JsonProperty("commits")]
        public ScoreMethod Commits { get; set; }

        [JsonProperty("patches")]
        public ScoreMethod Patches { get; set; }

        [JsonProperty("notes")]
        public ScoreMethod Notes { get; set; }
    }

    public partial class ComponentData
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("required")]
        public string[] ComponentDataRequired { get; set; }

        [JsonProperty("properties")]
        public ComponentDataProperties Properties { get; set; }
    }

    public partial class ComponentDataProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("type")]
        public AffectedStatus Type { get; set; }

        [JsonProperty("name")]
        public BenefitsClass Name { get; set; }

        [JsonProperty("contents")]
        public Contents Contents { get; set; }

        [JsonProperty("classification")]
        public ClassificationElement Classification { get; set; }

        [JsonProperty("sensitiveData")]
        public SensitiveData SensitiveData { get; set; }

        [JsonProperty("graphics")]
        public ClassificationElement Graphics { get; set; }

        [JsonProperty("description")]
        public BenefitsClass Description { get; set; }

        [JsonProperty("governance")]
        public Governance Governance { get; set; }
    }

    public partial class Contents
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ContentsProperties Properties { get; set; }
    }

    public partial class ContentsProperties
    {
        [JsonProperty("attachment")]
        public LicenseChoice Attachment { get; set; }

        [JsonProperty("url")]
        public HashContent Url { get; set; }

        [JsonProperty("properties")]
        public Title Properties { get; set; }
    }

    public partial class BenefitsClass
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }
    }

    public partial class Governance
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public SocialImageItems Items { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Examples { get; set; }
    }

    public partial class SocialImageItems
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("anyOf", NullValueHandling = NullValueHandling.Ignore)]
        public HashContent[] AnyOf { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("required", NullValueHandling = NullValueHandling.Ignore)]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public IndecentProperties Properties { get; set; }
    }

    public partial class IndecentProperties
    {
        [JsonProperty("id")]
        public AffectedStatus Id { get; set; }

        [JsonProperty("source")]
        public Severity Source { get; set; }
    }

    public partial class SensitiveData
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public SensitiveDataItems Items { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("format", NullValueHandling = NullValueHandling.Ignore)]
        public string Format { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("examples", NullValueHandling = NullValueHandling.Ignore)]
        public Example[] Examples { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public SensitiveDataProperties Properties { get; set; }
    }

    public partial class SensitiveDataItems
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("enum", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Enum { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("oneOf", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyOneOf[] OneOf { get; set; }
    }

    public partial class FluffyOneOf
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("$ref", NullValueHandling = NullValueHandling.Ignore)]
        public string Ref { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public HilariousProperties Properties { get; set; }
    }

    public partial class HilariousProperties
    {
        [JsonProperty("ref")]
        public Ref Ref { get; set; }
    }

    public partial class Ref
    {
        [JsonProperty("anyOf")]
        public AnyOf[] AnyOf { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class SensitiveDataProperties
    {
        [JsonProperty("reproductionSteps")]
        public Governance ReproductionSteps { get; set; }

        [JsonProperty("environment")]
        public Governance Environment { get; set; }

        [JsonProperty("supportingMaterial")]
        public Governance SupportingMaterial { get; set; }
    }

    public partial class ComponentEvidence
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ComponentEvidenceProperties Properties { get; set; }
    }

    public partial class ComponentEvidenceProperties
    {
        [JsonProperty("identity")]
        public Identity Identity { get; set; }

        [JsonProperty("occurrences")]
        public HashContent Occurrences { get; set; }

        [JsonProperty("callstack")]
        public Callstack Callstack { get; set; }

        [JsonProperty("licenses")]
        public AnyOf Licenses { get; set; }

        [JsonProperty("copyright")]
        public ScoreMethod Copyright { get; set; }
    }

    public partial class Callstack
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CallstackProperties Properties { get; set; }
    }

    public partial class CallstackProperties
    {
        [JsonProperty("frames")]
        public Frames Frames { get; set; }
    }

    public partial class Frames
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("items")]
        public FramesItems Items { get; set; }
    }

    public partial class FramesItems
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("required")]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AmbitiousProperties Properties { get; set; }
    }

    public partial class AmbitiousProperties
    {
        [JsonProperty("package")]
        public ScoreMethod Package { get; set; }

        [JsonProperty("module")]
        public ScoreMethod Module { get; set; }

        [JsonProperty("function")]
        public ScoreMethod Function { get; set; }

        [JsonProperty("parameters")]
        public ScoreMethod Parameters { get; set; }

        [JsonProperty("line")]
        public ScoreMethod Line { get; set; }

        [JsonProperty("column")]
        public ScoreMethod Column { get; set; }

        [JsonProperty("fullFilename")]
        public ScoreMethod FullFilename { get; set; }
    }

    public partial class Identity
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] IdentityRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public IdentityProperties Properties { get; set; }
    }

    public partial class IdentityProperties
    {
        [JsonProperty("field")]
        public Title Field { get; set; }

        [JsonProperty("confidence")]
        public Cwe Confidence { get; set; }

        [JsonProperty("methods")]
        public Title Methods { get; set; }

        [JsonProperty("tools")]
        public Subjects Tools { get; set; }
    }

    public partial class Compositions
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] CompositionsRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CunningProperties Properties { get; set; }
    }

    public partial class CunningProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("aggregate")]
        public LicenseChoice Aggregate { get; set; }

        [JsonProperty("assemblies")]
        public Subjects Assemblies { get; set; }

        [JsonProperty("dependencies")]
        public ScoreMethod Dependencies { get; set; }

        [JsonProperty("vulnerabilities")]
        public ScoreMethod Vulnerabilities { get; set; }

        [JsonProperty("signature")]
        public LicenseChoice Signature { get; set; }
    }

    public partial class Condition
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ConditionProperties Properties { get; set; }
    }

    public partial class ConditionProperties
    {
        [JsonProperty("description")]
        public AffectedStatus Description { get; set; }

        [JsonProperty("expression")]
        public AffectedStatus Expression { get; set; }

        [JsonProperty("properties")]
        public Title Properties { get; set; }
    }

    public partial class Copyright
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] CopyrightRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CopyrightProperties Properties { get; set; }
    }

    public partial class CopyrightProperties
    {
        [JsonProperty("text")]
        public Text Text { get; set; }
    }

    public partial class Text
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }
    }

    public partial class DataGovernance
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public DataGovernanceProperties Properties { get; set; }
    }

    public partial class DataGovernanceProperties
    {
        [JsonProperty("custodians")]
        public Title Custodians { get; set; }

        [JsonProperty("stewards")]
        public AffectedStatus Stewards { get; set; }

        [JsonProperty("owners")]
        public AffectedStatus Owners { get; set; }
    }

    public partial class DataGovernanceResponsibleParty
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public DataGovernanceResponsiblePartyProperties Properties { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }
    }

    public partial class DataGovernanceResponsiblePartyProperties
    {
        [JsonProperty("organization")]
        public AnyOf Organization { get; set; }

        [JsonProperty("contact")]
        public AnyOf Contact { get; set; }
    }

    public partial class Dependency
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] DependencyRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public DependencyProperties Properties { get; set; }
    }

    public partial class DependencyProperties
    {
        [JsonProperty("ref")]
        public LicenseChoice Ref { get; set; }

        [JsonProperty("dependsOn")]
        public AffectedStatus DependsOn { get; set; }
    }

    public partial class Diff
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public DiffProperties Properties { get; set; }
    }

    public partial class DiffProperties
    {
        [JsonProperty("text")]
        public LicenseChoice Text { get; set; }

        [JsonProperty("url")]
        public HashContent Url { get; set; }
    }

    public partial class Event
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public EventProperties Properties { get; set; }
    }

    public partial class EventProperties
    {
        [JsonProperty("uid")]
        public ScoreMethod Uid { get; set; }

        [JsonProperty("description")]
        public ScoreMethod Description { get; set; }

        [JsonProperty("timeReceived")]
        public ScoreMethod TimeReceived { get; set; }

        [JsonProperty("data")]
        public LicenseChoice Data { get; set; }

        [JsonProperty("source")]
        public LicenseChoice Source { get; set; }

        [JsonProperty("target")]
        public LicenseChoice Target { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class ExternalReference
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] ExternalReferenceRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ExternalReferenceProperties Properties { get; set; }
    }

    public partial class ExternalReferenceProperties
    {
        [JsonProperty("url")]
        public Url Url { get; set; }

        [JsonProperty("comment")]
        public Title Comment { get; set; }

        [JsonProperty("type")]
        public Title Type { get; set; }

        [JsonProperty("hashes")]
        public Title Hashes { get; set; }
    }

    public partial class Url
    {
        [JsonProperty("anyOf")]
        public Governance[] AnyOf { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class FairnessAssessment
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public FairnessAssessmentProperties Properties { get; set; }
    }

    public partial class FairnessAssessmentProperties
    {
        [JsonProperty("groupAtRisk")]
        public BenefitsClass GroupAtRisk { get; set; }

        [JsonProperty("benefits")]
        public BenefitsClass Benefits { get; set; }

        [JsonProperty("harms")]
        public BenefitsClass Harms { get; set; }

        [JsonProperty("mitigationStrategy")]
        public BenefitsClass MitigationStrategy { get; set; }
    }

    public partial class Formula
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public FormulaProperties Properties { get; set; }
    }

    public partial class FormulaProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("components")]
        public AffectedStatus Components { get; set; }

        [JsonProperty("services")]
        public AffectedStatus Services { get; set; }

        [JsonProperty("workflows")]
        public AffectedStatus Workflows { get; set; }

        [JsonProperty("properties")]
        public AffectedStatus Properties { get; set; }
    }

    public partial class Graphic
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public GraphicProperties Properties { get; set; }
    }

    public partial class GraphicProperties
    {
        [JsonProperty("name")]
        public BenefitsClass Name { get; set; }

        [JsonProperty("image")]
        public LicenseChoice Image { get; set; }
    }

    public partial class GraphicsCollection
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public GraphicsCollectionProperties Properties { get; set; }
    }

    public partial class GraphicsCollectionProperties
    {
        [JsonProperty("description")]
        public BenefitsClass Description { get; set; }

        [JsonProperty("collection")]
        public AffectedStatus Collection { get; set; }
    }

    public partial class Hash
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] HashRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public HashProperties Properties { get; set; }
    }

    public partial class HashProperties
    {
        [JsonProperty("alg")]
        public ClassificationElement Alg { get; set; }

        [JsonProperty("content")]
        public ClassificationElement Content { get; set; }
    }

    public partial class IdentifiableAction
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public IdentifiableActionProperties Properties { get; set; }
    }

    public partial class IdentifiableActionProperties
    {
        [JsonProperty("timestamp")]
        public Cwe Timestamp { get; set; }

        [JsonProperty("name")]
        public Cwe Name { get; set; }

        [JsonProperty("email")]
        public Cwe Email { get; set; }
    }

    public partial class InputOutputMlParameters
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public InputOutputMlParametersProperties Properties { get; set; }
    }

    public partial class InputOutputMlParametersProperties
    {
        [JsonProperty("format")]
        public BenefitsClass Format { get; set; }
    }

    public partial class InputType
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public InputTypeProperties Properties { get; set; }
    }

    public partial class InputTypeProperties
    {
        [JsonProperty("source")]
        public ScoreMethod Source { get; set; }

        [JsonProperty("target")]
        public ScoreMethod Target { get; set; }

        [JsonProperty("resource")]
        public ScoreMethod Resource { get; set; }

        [JsonProperty("parameters")]
        public ScoreMethod Parameters { get; set; }

        [JsonProperty("environmentVars")]
        public EnvironmentVars EnvironmentVars { get; set; }

        [JsonProperty("data")]
        public LicenseChoice Data { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class EnvironmentVars
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }

        [JsonProperty("items")]
        public EnvironmentVarsItems Items { get; set; }
    }

    public partial class EnvironmentVarsItems
    {
        [JsonProperty("oneOf")]
        public OneOfElement[] OneOf { get; set; }
    }

    public partial class Issue
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] IssueRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public IssueProperties Properties { get; set; }
    }

    public partial class IssueProperties
    {
        [JsonProperty("type")]
        public AffectedStatus Type { get; set; }

        [JsonProperty("id")]
        public Title Id { get; set; }

        [JsonProperty("name")]
        public Title Name { get; set; }

        [JsonProperty("description")]
        public Title Description { get; set; }

        [JsonProperty("source")]
        public Source Source { get; set; }

        [JsonProperty("references")]
        public Title References { get; set; }
    }

    public partial class Source
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public MagentaProperties Properties { get; set; }
    }

    public partial class MagentaProperties
    {
        [JsonProperty("name")]
        public AffectedStatus Name { get; set; }

        [JsonProperty("url")]
        public AffectedStatus Url { get; set; }
    }

    public partial class License
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public LicenseProperties Properties { get; set; }
    }

    public partial class LicenseProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("id")]
        public LicenseChoice Id { get; set; }

        [JsonProperty("name")]
        public LicenseChoice Name { get; set; }

        [JsonProperty("text")]
        public LicenseChoice Text { get; set; }

        [JsonProperty("url")]
        public LicenseChoice Url { get; set; }

        [JsonProperty("licensing")]
        public Licensing Licensing { get; set; }

        [JsonProperty("properties")]
        public LicenseChoice Properties { get; set; }
    }

    public partial class Licensing
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public LicensingProperties Properties { get; set; }
    }

    public partial class LicensingProperties
    {
        [JsonProperty("altIds")]
        public SensitiveData AltIds { get; set; }

        [JsonProperty("licensor")]
        public Licensee Licensor { get; set; }

        [JsonProperty("licensee")]
        public Licensee Licensee { get; set; }

        [JsonProperty("purchaser")]
        public Licensee Purchaser { get; set; }

        [JsonProperty("purchaseOrder")]
        public ScoreMethod PurchaseOrder { get; set; }

        [JsonProperty("licenseTypes")]
        public SensitiveData LicenseTypes { get; set; }

        [JsonProperty("lastRenewal")]
        public SensitiveData LastRenewal { get; set; }

        [JsonProperty("expiration")]
        public SensitiveData Expiration { get; set; }
    }

    public partial class Licensee
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public LicenseeProperties Properties { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }
    }

    public partial class LicenseeProperties
    {
        [JsonProperty("organization")]
        public BomRef Organization { get; set; }

        [JsonProperty("individual")]
        public BomRef Individual { get; set; }
    }

    public partial class BomRef
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    public partial class Metadata
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public MetadataProperties Properties { get; set; }
    }

    public partial class MetadataProperties
    {
        [JsonProperty("timestamp")]
        public ScoreMethod Timestamp { get; set; }

        [JsonProperty("lifecycles")]
        public LicenseChoice Lifecycles { get; set; }

        [JsonProperty("tools")]
        public Tools Tools { get; set; }

        [JsonProperty("authors")]
        public Cwe Authors { get; set; }

        [JsonProperty("component")]
        public LicenseChoice Component { get; set; }

        [JsonProperty("manufacture")]
        public ScoreMethod Manufacture { get; set; }

        [JsonProperty("supplier")]
        public ScoreMethod Supplier { get; set; }

        [JsonProperty("licenses")]
        public AnyOf Licenses { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class Tools
    {
        [JsonProperty("oneOf")]
        public ToolsOneOf[] OneOf { get; set; }
    }

    public partial class ToolsOneOf
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AdditionalProperties { get; set; }

        [JsonProperty("properties", NullValueHandling = NullValueHandling.Ignore)]
        public FriskyProperties Properties { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public ClassificationElement Items { get; set; }
    }

    public partial class FriskyProperties
    {
        [JsonProperty("components")]
        public ResourceReferences Components { get; set; }

        [JsonProperty("services")]
        public ResourceReferences Services { get; set; }
    }

    public partial class ResourceReferences
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class ModelCard
    {
        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ModelCardProperties Properties { get; set; }
    }

    public partial class ModelCardProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("modelParameters")]
        public ModelParameters ModelParameters { get; set; }

        [JsonProperty("quantitativeAnalysis")]
        public QuantitativeAnalysis QuantitativeAnalysis { get; set; }

        [JsonProperty("considerations")]
        public Considerations Considerations { get; set; }

        [JsonProperty("properties")]
        public Cwe Properties { get; set; }
    }

    public partial class Considerations
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ConsiderationsProperties Properties { get; set; }
    }

    public partial class ConsiderationsProperties
    {
        [JsonProperty("users")]
        public SensitiveData Users { get; set; }

        [JsonProperty("useCases")]
        public SensitiveData UseCases { get; set; }

        [JsonProperty("technicalLimitations")]
        public SensitiveData TechnicalLimitations { get; set; }

        [JsonProperty("performanceTradeoffs")]
        public SensitiveData PerformanceTradeoffs { get; set; }

        [JsonProperty("ethicalConsiderations")]
        public AffectedStatus EthicalConsiderations { get; set; }

        [JsonProperty("fairnessAssessments")]
        public SensitiveData FairnessAssessments { get; set; }
    }

    public partial class ModelParameters
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ModelParametersProperties Properties { get; set; }
    }

    public partial class ModelParametersProperties
    {
        [JsonProperty("approach")]
        public Approach Approach { get; set; }

        [JsonProperty("task")]
        public Cwe Task { get; set; }

        [JsonProperty("architectureFamily")]
        public SensitiveData ArchitectureFamily { get; set; }

        [JsonProperty("modelArchitecture")]
        public Cwe ModelArchitecture { get; set; }

        [JsonProperty("datasets")]
        public SensitiveData Datasets { get; set; }

        [JsonProperty("inputs")]
        public Cwe Inputs { get; set; }

        [JsonProperty("outputs")]
        public Cwe Outputs { get; set; }
    }

    public partial class Approach
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ApproachProperties Properties { get; set; }
    }

    public partial class ApproachProperties
    {
        [JsonProperty("type")]
        public SensitiveData Type { get; set; }
    }

    public partial class QuantitativeAnalysis
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public QuantitativeAnalysisProperties Properties { get; set; }
    }

    public partial class QuantitativeAnalysisProperties
    {
        [JsonProperty("performanceMetrics")]
        public Cwe PerformanceMetrics { get; set; }

        [JsonProperty("graphics")]
        public ClassificationElement Graphics { get; set; }
    }

    public partial class Note
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] NoteRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public NoteProperties Properties { get; set; }
    }

    public partial class NoteProperties
    {
        [JsonProperty("locale")]
        public ScoreMethod Locale { get; set; }

        [JsonProperty("text")]
        public ScoreMethod Text { get; set; }
    }

    public partial class OrganizationalContact
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public OrganizationalContactProperties Properties { get; set; }
    }

    public partial class OrganizationalContactProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("name")]
        public LicenseChoice Name { get; set; }

        [JsonProperty("email")]
        public LicenseChoice Email { get; set; }

        [JsonProperty("phone")]
        public LicenseChoice Phone { get; set; }
    }

    public partial class OrganizationalEntity
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public OrganizationalEntityProperties Properties { get; set; }
    }

    public partial class OrganizationalEntityProperties
    {
        [JsonProperty("bom-ref")]
        public ScoreMethod BomRef { get; set; }

        [JsonProperty("name")]
        public Cwe Name { get; set; }

        [JsonProperty("url")]
        public Cwe Url { get; set; }

        [JsonProperty("contact")]
        public ScoreMethod Contact { get; set; }
    }

    public partial class OutputType
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public OutputTypeProperties Properties { get; set; }
    }

    public partial class OutputTypeProperties
    {
        [JsonProperty("type")]
        public Cwe Type { get; set; }

        [JsonProperty("source")]
        public Cwe Source { get; set; }

        [JsonProperty("target")]
        public Cwe Target { get; set; }

        [JsonProperty("resource")]
        public Cwe Resource { get; set; }

        [JsonProperty("data")]
        public ScoreMethod Data { get; set; }

        [JsonProperty("environmentVars")]
        public EnvironmentVars EnvironmentVars { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class Parameter
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ParameterProperties Properties { get; set; }
    }

    public partial class ParameterProperties
    {
        [JsonProperty("name")]
        public ScoreMethod Name { get; set; }

        [JsonProperty("value")]
        public ScoreMethod Value { get; set; }

        [JsonProperty("dataType")]
        public ScoreMethod DataType { get; set; }
    }

    public partial class Patch
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] PatchRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public PatchProperties Properties { get; set; }
    }

    public partial class PatchProperties
    {
        [JsonProperty("type")]
        public LicenseChoice Type { get; set; }

        [JsonProperty("diff")]
        public LicenseChoice Diff { get; set; }

        [JsonProperty("resolves")]
        public LicenseChoice Resolves { get; set; }
    }

    public partial class PerformanceMetric
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public PerformanceMetricProperties Properties { get; set; }
    }

    public partial class PerformanceMetricProperties
    {
        [JsonProperty("type")]
        public BenefitsClass Type { get; set; }

        [JsonProperty("value")]
        public BenefitsClass Value { get; set; }

        [JsonProperty("slice")]
        public BenefitsClass Slice { get; set; }

        [JsonProperty("confidenceInterval")]
        public ConfidenceInterval ConfidenceInterval { get; set; }
    }

    public partial class ConfidenceInterval
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ConfidenceIntervalProperties Properties { get; set; }
    }

    public partial class ConfidenceIntervalProperties
    {
        [JsonProperty("lowerBound")]
        public BenefitsClass LowerBound { get; set; }

        [JsonProperty("upperBound")]
        public BenefitsClass UpperBound { get; set; }
    }

    public partial class Range
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("minLength")]
        public long MinLength { get; set; }

        [JsonProperty("maxLength", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxLength { get; set; }

        [JsonProperty("$comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }
    }

    public partial class Rating
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public RatingProperties Properties { get; set; }
    }

    public partial class RatingProperties
    {
        [JsonProperty("source")]
        public Severity Source { get; set; }

        [JsonProperty("score")]
        public AffectedStatus Score { get; set; }

        [JsonProperty("severity")]
        public Severity Severity { get; set; }

        [JsonProperty("method")]
        public ClassificationElement Method { get; set; }

        [JsonProperty("vector")]
        public AffectedStatus Vector { get; set; }

        [JsonProperty("justification")]
        public AffectedStatus Justification { get; set; }
    }

    public partial class RefLinkType
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("allOf")]
        public ClassificationElement[] AllOf { get; set; }
    }

    public partial class ReleaseNotes
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] ReleaseNotesRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ReleaseNotesProperties Properties { get; set; }
    }

    public partial class ReleaseNotesProperties
    {
        [JsonProperty("type")]
        public Cwe Type { get; set; }

        [JsonProperty("title")]
        public Governance Title { get; set; }

        [JsonProperty("featuredImage")]
        public SensitiveData FeaturedImage { get; set; }

        [JsonProperty("socialImage")]
        public Governance SocialImage { get; set; }

        [JsonProperty("description")]
        public SensitiveData Description { get; set; }

        [JsonProperty("timestamp")]
        public Governance Timestamp { get; set; }

        [JsonProperty("aliases")]
        public SensitiveData Aliases { get; set; }

        [JsonProperty("tags")]
        public Governance Tags { get; set; }

        [JsonProperty("resolves")]
        public Cwe Resolves { get; set; }

        [JsonProperty("notes")]
        public SensitiveData Notes { get; set; }

        [JsonProperty("properties")]
        public Cwe Properties { get; set; }
    }

    public partial class ResourceReferenceChoice
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ResourceReferenceChoiceProperties Properties { get; set; }

        [JsonProperty("oneOf")]
        public AnnotatorOneOf[] OneOf { get; set; }
    }

    public partial class ResourceReferenceChoiceProperties
    {
        [JsonProperty("ref")]
        public Ref Ref { get; set; }

        [JsonProperty("externalReference")]
        public ScoreMethod ExternalReference { get; set; }
    }

    public partial class Risk
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public RiskProperties Properties { get; set; }
    }

    public partial class RiskProperties
    {
        [JsonProperty("name")]
        public BenefitsClass Name { get; set; }

        [JsonProperty("mitigationStrategy")]
        public BenefitsClass MitigationStrategy { get; set; }
    }

    public partial class Service
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] ServiceRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ServiceProperties Properties { get; set; }
    }

    public partial class ServiceProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("provider")]
        public Cwe Provider { get; set; }

        [JsonProperty("group")]
        public LicenseChoice Group { get; set; }

        [JsonProperty("name")]
        public Governance Name { get; set; }

        [JsonProperty("version")]
        public Cwe Version { get; set; }

        [JsonProperty("description")]
        public LicenseChoice Description { get; set; }

        [JsonProperty("endpoints")]
        public LicenseChoice Endpoints { get; set; }

        [JsonProperty("authenticated")]
        public Governance Authenticated { get; set; }

        [JsonProperty("x-trust-boundary")]
        public Cwe XTrustBoundary { get; set; }

        [JsonProperty("trustZone")]
        public Cwe TrustZone { get; set; }

        [JsonProperty("data")]
        public LicenseChoice Data { get; set; }

        [JsonProperty("licenses")]
        public AnyOf Licenses { get; set; }

        [JsonProperty("externalReferences")]
        public LicenseChoice ExternalReferences { get; set; }

        [JsonProperty("services")]
        public Cwe Services { get; set; }

        [JsonProperty("releaseNotes")]
        public Cwe ReleaseNotes { get; set; }

        [JsonProperty("properties")]
        public Governance Properties { get; set; }

        [JsonProperty("signature")]
        public Cwe Signature { get; set; }
    }

    public partial class ServiceData
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("required")]
        public string[] ServiceDataRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ServiceDataProperties Properties { get; set; }
    }

    public partial class ServiceDataProperties
    {
        [JsonProperty("flow")]
        public LicenseChoice Flow { get; set; }

        [JsonProperty("classification")]
        public ClassificationElement Classification { get; set; }

        [JsonProperty("name")]
        public HashContent Name { get; set; }

        [JsonProperty("description")]
        public Governance Description { get; set; }

        [JsonProperty("governance")]
        public HashContent Governance { get; set; }

        [JsonProperty("source")]
        public HashContent Source { get; set; }

        [JsonProperty("destination")]
        public Governance Destination { get; set; }
    }

    public partial class Step
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public StepProperties Properties { get; set; }
    }

    public partial class StepProperties
    {
        [JsonProperty("name")]
        public Title Name { get; set; }

        [JsonProperty("description")]
        public Title Description { get; set; }

        [JsonProperty("commands")]
        public Title Commands { get; set; }

        [JsonProperty("properties")]
        public Title Properties { get; set; }
    }

    public partial class Swid
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("required")]
        public string[] SwidRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public SwidProperties Properties { get; set; }
    }

    public partial class SwidProperties
    {
        [JsonProperty("tagId")]
        public Title TagId { get; set; }

        [JsonProperty("name")]
        public Title Name { get; set; }

        [JsonProperty("version")]
        public ScoreMethod Version { get; set; }

        [JsonProperty("tagVersion")]
        public Title TagVersion { get; set; }

        [JsonProperty("patch")]
        public Title Patch { get; set; }

        [JsonProperty("text")]
        public ScoreMethod Text { get; set; }

        [JsonProperty("url")]
        public ScoreMethod Url { get; set; }
    }

    public partial class Task
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("required")]
        public string[] TaskRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public TaskProperties Properties { get; set; }
    }

    public partial class TaskProperties
    {
        [JsonProperty("bom-ref")]
        public BomRef BomRef { get; set; }

        [JsonProperty("uid")]
        public LicenseChoice Uid { get; set; }

        [JsonProperty("name")]
        public PurpleDescription Name { get; set; }

        [JsonProperty("description")]
        public PurpleDescription Description { get; set; }

        [JsonProperty("resourceReferences")]
        public ResourceReferences ResourceReferences { get; set; }

        [JsonProperty("taskTypes")]
        public TaskTypes TaskTypes { get; set; }

        [JsonProperty("trigger")]
        public LicenseChoice Trigger { get; set; }

        [JsonProperty("steps")]
        public ResourceReferences Steps { get; set; }

        [JsonProperty("inputs")]
        public Puts Inputs { get; set; }

        [JsonProperty("outputs")]
        public Puts Outputs { get; set; }

        [JsonProperty("timeStart")]
        public Time TimeStart { get; set; }

        [JsonProperty("timeEnd")]
        public Time TimeEnd { get; set; }

        [JsonProperty("workspaces")]
        public LicenseChoice Workspaces { get; set; }

        [JsonProperty("runtimeTopology")]
        public RuntimeTopology RuntimeTopology { get; set; }

        [JsonProperty("properties")]
        public MischievousProperties Properties { get; set; }

        [JsonProperty("tasks", NullValueHandling = NullValueHandling.Ignore)]
        public LicenseChoice Tasks { get; set; }

        [JsonProperty("taskDependencies", NullValueHandling = NullValueHandling.Ignore)]
        public LicenseChoice TaskDependencies { get; set; }
    }

    public partial class PurpleDescription
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }
    }

    public partial class Puts
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("examples")]
        public string[] Examples { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }
    }

    public partial class MischievousProperties
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }
    }

    public partial class RuntimeTopology
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }
    }

    public partial class TaskTypes
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("$comment")]
        public string Comment { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }
    }

    public partial class Time
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("format")]
        public string Format { get; set; }
    }

    public partial class TaskType
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("enum")]
        public string[] Enum { get; set; }
    }

    public partial class Tool
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public ToolProperties Properties { get; set; }
    }

    public partial class ToolProperties
    {
        [JsonProperty("vendor")]
        public LicenseChoice Vendor { get; set; }

        [JsonProperty("name")]
        public LicenseChoice Name { get; set; }

        [JsonProperty("version")]
        public LicenseChoice Version { get; set; }

        [JsonProperty("hashes")]
        public LicenseChoice Hashes { get; set; }

        [JsonProperty("externalReferences")]
        public LicenseChoice ExternalReferences { get; set; }
    }

    public partial class Trigger
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("required")]
        public string[] TriggerRequired { get; set; }

        [JsonProperty("properties")]
        public TriggerProperties Properties { get; set; }
    }

    public partial class TriggerProperties
    {
        [JsonProperty("bom-ref")]
        public Cwe BomRef { get; set; }

        [JsonProperty("uid")]
        public ScoreMethod Uid { get; set; }

        [JsonProperty("name")]
        public ScoreMethod Name { get; set; }

        [JsonProperty("description")]
        public SensitiveData Description { get; set; }

        [JsonProperty("resourceReferences")]
        public ScoreMethod ResourceReferences { get; set; }

        [JsonProperty("type")]
        public ScoreMethod Type { get; set; }

        [JsonProperty("event")]
        public ScoreMethod Event { get; set; }

        [JsonProperty("conditions")]
        public Conditions Conditions { get; set; }

        [JsonProperty("timeActivated")]
        public ScoreMethod TimeActivated { get; set; }

        [JsonProperty("inputs")]
        public ScoreMethod Inputs { get; set; }

        [JsonProperty("outputs")]
        public ScoreMethod Outputs { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class Conditions
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }

        [JsonProperty("items")]
        public ClassificationElement Items { get; set; }
    }

    public partial class Volume
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public VolumeProperties Properties { get; set; }
    }

    public partial class VolumeProperties
    {
        [JsonProperty("uid")]
        public ScoreMethod Uid { get; set; }

        [JsonProperty("name")]
        public ScoreMethod Name { get; set; }

        [JsonProperty("mode")]
        public ScoreMethod Mode { get; set; }

        [JsonProperty("path")]
        public ScoreMethod Path { get; set; }

        [JsonProperty("sizeAllocated")]
        public ScoreMethod SizeAllocated { get; set; }

        [JsonProperty("persistent")]
        public ScoreMethod Persistent { get; set; }

        [JsonProperty("remote")]
        public ScoreMethod Remote { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }
    }

    public partial class Vulnerability
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public VulnerabilityProperties Properties { get; set; }
    }

    public partial class VulnerabilityProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("id")]
        public SensitiveData Id { get; set; }

        [JsonProperty("source")]
        public Severity Source { get; set; }

        [JsonProperty("references")]
        public Governance References { get; set; }

        [JsonProperty("ratings")]
        public Governance Ratings { get; set; }

        [JsonProperty("cwes")]
        public SensitiveData Cwes { get; set; }

        [JsonProperty("description")]
        public SensitiveData Description { get; set; }

        [JsonProperty("detail")]
        public SensitiveData Detail { get; set; }

        [JsonProperty("recommendation")]
        public Governance Recommendation { get; set; }

        [JsonProperty("workaround")]
        public Cwe Workaround { get; set; }

        [JsonProperty("proofOfConcept")]
        public SensitiveData ProofOfConcept { get; set; }

        [JsonProperty("advisories")]
        public HashContent Advisories { get; set; }

        [JsonProperty("created")]
        public LicenseChoice Created { get; set; }

        [JsonProperty("published")]
        public Governance Published { get; set; }

        [JsonProperty("updated")]
        public Cwe Updated { get; set; }

        [JsonProperty("rejected")]
        public Cwe Rejected { get; set; }

        [JsonProperty("credits")]
        public Credits Credits { get; set; }

        [JsonProperty("tools")]
        public Tools Tools { get; set; }

        [JsonProperty("analysis")]
        public Analysis Analysis { get; set; }

        [JsonProperty("affects")]
        public Affects Affects { get; set; }

        [JsonProperty("properties")]
        public Governance Properties { get; set; }
    }

    public partial class Affects
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("uniqueItems")]
        public bool UniqueItems { get; set; }

        [JsonProperty("items")]
        public AffectsItems Items { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }
    }

    public partial class AffectsItems
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("required")]
        public string[] ItemsRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public BraggadociousProperties Properties { get; set; }
    }

    public partial class BraggadociousProperties
    {
        [JsonProperty("ref")]
        public Ref Ref { get; set; }

        [JsonProperty("versions")]
        public HashContent Versions { get; set; }
    }

    public partial class Analysis
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AnalysisProperties Properties { get; set; }
    }

    public partial class AnalysisProperties
    {
        [JsonProperty("state")]
        public ClassificationElement State { get; set; }

        [JsonProperty("justification")]
        public ClassificationElement Justification { get; set; }

        [JsonProperty("response")]
        public Governance Response { get; set; }

        [JsonProperty("detail")]
        public Title Detail { get; set; }

        [JsonProperty("firstIssued")]
        public Title FirstIssued { get; set; }

        [JsonProperty("lastUpdated")]
        public Governance LastUpdated { get; set; }
    }

    public partial class Credits
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public CreditsProperties Properties { get; set; }
    }

    public partial class CreditsProperties
    {
        [JsonProperty("organizations")]
        public SensitiveData Organizations { get; set; }

        [JsonProperty("individuals")]
        public AffectedStatus Individuals { get; set; }
    }

    public partial class VulnerabilitySource
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public VulnerabilitySourceProperties Properties { get; set; }
    }

    public partial class VulnerabilitySourceProperties
    {
        [JsonProperty("url")]
        public ScoreMethod Url { get; set; }

        [JsonProperty("name")]
        public ScoreMethod Name { get; set; }
    }

    public partial class Workspace
    {
        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("required")]
        public string[] WorkspaceRequired { get; set; }

        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public WorkspaceProperties Properties { get; set; }
    }

    public partial class WorkspaceProperties
    {
        [JsonProperty("bom-ref")]
        public LicenseChoice BomRef { get; set; }

        [JsonProperty("uid")]
        public Title Uid { get; set; }

        [JsonProperty("name")]
        public LicenseChoice Name { get; set; }

        [JsonProperty("aliases")]
        public LicenseChoice Aliases { get; set; }

        [JsonProperty("description")]
        public LicenseChoice Description { get; set; }

        [JsonProperty("resourceReferences")]
        public Title ResourceReferences { get; set; }

        [JsonProperty("accessMode")]
        public LicenseChoice AccessMode { get; set; }

        [JsonProperty("mountPath")]
        public LicenseChoice MountPath { get; set; }

        [JsonProperty("managedDataType")]
        public LicenseChoice ManagedDataType { get; set; }

        [JsonProperty("volumeRequest")]
        public Cwe VolumeRequest { get; set; }

        [JsonProperty("volume")]
        public Cwe Volume { get; set; }

        [JsonProperty("properties")]
        public LicenseChoice Properties { get; set; }
    }

    public partial class Welcome7Properties
    {
        [JsonProperty("$schema")]
        public TaskType Schema { get; set; }

        [JsonProperty("bomFormat")]
        public HashContent BomFormat { get; set; }

        [JsonProperty("specVersion")]
        public ScoreMethod SpecVersion { get; set; }

        [JsonProperty("serialNumber")]
        public HashContent SerialNumber { get; set; }

        [JsonProperty("version")]
        public Version Version { get; set; }

        [JsonProperty("metadata")]
        public ScoreMethod Metadata { get; set; }

        [JsonProperty("components")]
        public HashContent Components { get; set; }

        [JsonProperty("services")]
        public HashContent Services { get; set; }

        [JsonProperty("externalReferences")]
        public HashContent ExternalReferences { get; set; }

        [JsonProperty("dependencies")]
        public HashContent Dependencies { get; set; }

        [JsonProperty("compositions")]
        public HashContent Compositions { get; set; }

        [JsonProperty("vulnerabilities")]
        public HashContent Vulnerabilities { get; set; }

        [JsonProperty("annotations")]
        public HashContent Annotations { get; set; }

        [JsonProperty("formulation")]
        public HashContent Formulation { get; set; }

        [JsonProperty("properties")]
        public ScoreMethod Properties { get; set; }

        [JsonProperty("signature")]
        public ScoreMethod Signature { get; set; }
    }

    public partial class Version
    {
        [JsonProperty("type")]
        public TypeEnum Type { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("minimum")]
        public long Minimum { get; set; }

        [JsonProperty("default")]
        public long Default { get; set; }

        [JsonProperty("examples")]
        public long[] Examples { get; set; }
    }

    public enum TypeEnum { Array, Boolean, Integer, Number, Object, String };

    public partial struct ItemsUnion
    {
        public Item[] ItemArray;
        public PurpleItems PurpleItems;

        public static implicit operator ItemsUnion(Item[] ItemArray) => new ItemsUnion { ItemArray = ItemArray };
        public static implicit operator ItemsUnion(PurpleItems PurpleItems) => new ItemsUnion { PurpleItems = PurpleItems };
    }

    public partial struct Default
    {
        public bool? Bool;
        public long? Integer;
        public string String;

        public static implicit operator Default(bool Bool) => new Default { Bool = Bool };
        public static implicit operator Default(long Integer) => new Default { Integer = Integer };
        public static implicit operator Default(string String) => new Default { String = String };
    }

    public partial struct Example
    {
        public long? Integer;
        public string String;

        public static implicit operator Example(long Integer) => new Example { Integer = Integer };
        public static implicit operator Example(string String) => new Example { String = String };
    }

    public partial class Welcome7
    {
        public static Welcome7 FromJson(string json) => JsonConvert.DeserializeObject<Welcome7>(json, CodeBeautify.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Welcome7 self) => JsonConvert.SerializeObject(self, CodeBeautify.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                DefaultConverter.Singleton,
                TypeEnumConverter.Singleton,
                ItemsUnionConverter.Singleton,
                ExampleConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class DefaultConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Default) || t == typeof(Default?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Integer:
                    var integerValue = serializer.Deserialize<long>(reader);
                    return new Default { Integer = integerValue };
                case JsonToken.Boolean:
                    var boolValue = serializer.Deserialize<bool>(reader);
                    return new Default { Bool = boolValue };
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    return new Default { String = stringValue };
            }
            throw new Exception("Cannot unmarshal type Default");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (Default)untypedValue;
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value);
                return;
            }
            if (value.Bool != null)
            {
                serializer.Serialize(writer, value.Bool.Value);
                return;
            }
            if (value.String != null)
            {
                serializer.Serialize(writer, value.String);
                return;
            }
            throw new Exception("Cannot marshal type Default");
        }

        public static readonly DefaultConverter Singleton = new DefaultConverter();
    }

    internal class TypeEnumConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TypeEnum) || t == typeof(TypeEnum?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "array":
                    return TypeEnum.Array;
                case "boolean":
                    return TypeEnum.Boolean;
                case "integer":
                    return TypeEnum.Integer;
                case "number":
                    return TypeEnum.Number;
                case "object":
                    return TypeEnum.Object;
                case "string":
                    return TypeEnum.String;
            }
            throw new Exception("Cannot unmarshal type TypeEnum");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TypeEnum)untypedValue;
            switch (value)
            {
                case TypeEnum.Array:
                    serializer.Serialize(writer, "array");
                    return;
                case TypeEnum.Boolean:
                    serializer.Serialize(writer, "boolean");
                    return;
                case TypeEnum.Integer:
                    serializer.Serialize(writer, "integer");
                    return;
                case TypeEnum.Number:
                    serializer.Serialize(writer, "number");
                    return;
                case TypeEnum.Object:
                    serializer.Serialize(writer, "object");
                    return;
                case TypeEnum.String:
                    serializer.Serialize(writer, "string");
                    return;
            }
            throw new Exception("Cannot marshal type TypeEnum");
        }

        public static readonly TypeEnumConverter Singleton = new TypeEnumConverter();
    }

    internal class ItemsUnionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ItemsUnion) || t == typeof(ItemsUnion?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<PurpleItems>(reader);
                    return new ItemsUnion { PurpleItems = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<Item[]>(reader);
                    return new ItemsUnion { ItemArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type ItemsUnion");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (ItemsUnion)untypedValue;
            if (value.ItemArray != null)
            {
                serializer.Serialize(writer, value.ItemArray);
                return;
            }
            if (value.PurpleItems != null)
            {
                serializer.Serialize(writer, value.PurpleItems);
                return;
            }
            throw new Exception("Cannot marshal type ItemsUnion");
        }

        public static readonly ItemsUnionConverter Singleton = new ItemsUnionConverter();
    }

    internal class ExampleConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Example) || t == typeof(Example?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Integer:
                    var integerValue = serializer.Deserialize<long>(reader);
                    return new Example { Integer = integerValue };
                case JsonToken.String:
                case JsonToken.Date:
                    var stringValue = serializer.Deserialize<string>(reader);
                    return new Example { String = stringValue };
            }
            throw new Exception("Cannot unmarshal type Example");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (Example)untypedValue;
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value);
                return;
            }
            if (value.String != null)
            {
                serializer.Serialize(writer, value.String);
                return;
            }
            throw new Exception("Cannot marshal type Example");
        }

        public static readonly ExampleConverter Singleton = new ExampleConverter();
    }
}
